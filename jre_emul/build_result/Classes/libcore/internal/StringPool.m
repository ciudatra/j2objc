//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/libcore/internal/StringPool.java
//
//  Created by retechretech on 13-4-19.
//

#import "IOSCharArray.h"
#import "IOSObjectArray.h"
#import "libcore/internal/StringPool.h"

@implementation LibcoreInternalStringPool

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (IOSObjectArray *)pool {
  return pool_;
}
- (void)setPool:(IOSObjectArray *)pool {
  JreOperatorRetainedAssign(&pool_, pool);
}
@synthesize pool = pool_;

+ (BOOL)contentEqualsWithNSString:(NSString *)s
       withJavaLangCharacterArray:(IOSCharArray *)chars
                          withInt:(int)start
                          withInt:(int)length {
  if ([NIL_CHK(s) length] != length) {
    return NO;
  }
  for (int i = 0; i < length; i++) {
    if ([((IOSCharArray *) NIL_CHK(chars)) charAtIndex:start + i] != [NIL_CHK(s) charAtWithInt:i]) {
      return NO;
    }
  }
  return YES;
}

- (NSString *)getWithJavaLangCharacterArray:(IOSCharArray *)array
                                    withInt:(int)start
                                    withInt:(int)length {
  int hashCode = 0;
  for (int i = start; i < start + length; i++) {
    hashCode = (hashCode * 31) + [((IOSCharArray *) NIL_CHK(array)) charAtIndex:i];
  }
  hashCode ^= ((int) (((unsigned int) hashCode) >> 20)) ^ ((int) (((unsigned int) hashCode) >> 12));
  hashCode ^= ((int) (((unsigned int) hashCode) >> 7)) ^ ((int) (((unsigned int) hashCode) >> 4));
  int index = hashCode & ((int) [((IOSObjectArray *) NIL_CHK(pool_)) count] - 1);
  NSString *pooled = ((NSString *) [((IOSObjectArray *) NIL_CHK(pool_)) objectAtIndex:index]);
  if (pooled != nil && [LibcoreInternalStringPool contentEqualsWithNSString:pooled withJavaLangCharacterArray:array withInt:start withInt:length]) {
    return pooled;
  }
  NSString *result = [NSString stringWithCharacters:array offset:start length:length];
  [((IOSObjectArray *) NIL_CHK(pool_)) replaceObjectAtIndex:index withObject:result];
  return result;
}

- (id)init {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&pool_, [[[IOSObjectArray alloc] initWithLength:512 type:[IOSClass classWithClass:[NSString class]]] autorelease]);
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&pool_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  LibcoreInternalStringPool *typedCopy = (LibcoreInternalStringPool *) copy;
  typedCopy.pool = pool_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:pool_ name:@"pool"]];
  return result;
}

@end
