//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/xml/sax/helpers/AttributeListImpl.java
//
//  Created by retechretech on 13-4-26.
//

#import "java/util/ArrayList.h"
#import "org/xml/sax/AttributeList.h"
#import "org/xml/sax/helpers/AttributeListImpl.h"

@implementation OrgXmlSaxHelpersAttributeListImpl

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (JavaUtilArrayList *)names {
  return names_;
}
- (void)setNames:(JavaUtilArrayList *)names {
  JreOperatorRetainedAssign(&names_, names);
}
@synthesize names = names_;
- (JavaUtilArrayList *)types {
  return types_;
}
- (void)setTypes:(JavaUtilArrayList *)types {
  JreOperatorRetainedAssign(&types_, types);
}
@synthesize types = types_;
- (JavaUtilArrayList *)values {
  return values_;
}
- (void)setValues:(JavaUtilArrayList *)values {
  JreOperatorRetainedAssign(&values_, values);
}
@synthesize values = values_;

- (id)init {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&names_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreOperatorRetainedAssign(&types_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreOperatorRetainedAssign(&values_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithOrgXmlSaxAttributeList:(id<OrgXmlSaxAttributeList>)atts {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&names_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreOperatorRetainedAssign(&types_, [[[JavaUtilArrayList alloc] init] autorelease]);
    JreOperatorRetainedAssign(&values_, [[[JavaUtilArrayList alloc] init] autorelease]);
    [self setAttributeListWithOrgXmlSaxAttributeList:atts];
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)setAttributeListWithOrgXmlSaxAttributeList:(id<OrgXmlSaxAttributeList>)atts {
  int count = [((id<OrgXmlSaxAttributeList>) NIL_CHK(atts)) getLength];
  [self clear];
  for (int i = 0; i < count; i++) {
    [self addAttributeWithNSString:[((id<OrgXmlSaxAttributeList>) NIL_CHK(atts)) getNameWithInt:i] withNSString:[((id<OrgXmlSaxAttributeList>) NIL_CHK(atts)) getTypeWithInt:i] withNSString:[((id<OrgXmlSaxAttributeList>) NIL_CHK(atts)) getValueWithInt:i]];
  }
}

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value {
  [((JavaUtilArrayList *) NIL_CHK(names_)) addWithId:name];
  [((JavaUtilArrayList *) NIL_CHK(types_)) addWithId:type];
  [((JavaUtilArrayList *) NIL_CHK(values_)) addWithId:value];
}

- (void)removeAttributeWithNSString:(NSString *)name {
  int i = [((JavaUtilArrayList *) NIL_CHK(names_)) indexOfWithId:name];
  if (i != -1) {
    [((JavaUtilArrayList *) NIL_CHK(names_)) removeWithInt:i];
    [((JavaUtilArrayList *) NIL_CHK(types_)) removeWithInt:i];
    [((JavaUtilArrayList *) NIL_CHK(values_)) removeWithInt:i];
  }
}

- (void)clear {
  [((JavaUtilArrayList *) NIL_CHK(names_)) clear];
  [((JavaUtilArrayList *) NIL_CHK(types_)) clear];
  [((JavaUtilArrayList *) NIL_CHK(values_)) clear];
}

- (int)getLength {
  return [((JavaUtilArrayList *) NIL_CHK(names_)) size];
}

- (NSString *)getNameWithInt:(int)i {
  if (i < 0 || i >= [((JavaUtilArrayList *) NIL_CHK(names_)) size]) {
    return nil;
  }
  return ((NSString *) [((JavaUtilArrayList *) NIL_CHK(names_)) getWithInt:i]);
}

- (NSString *)getTypeWithInt:(int)i {
  if (i < 0 || i >= [((JavaUtilArrayList *) NIL_CHK(types_)) size]) {
    return nil;
  }
  return ((NSString *) [((JavaUtilArrayList *) NIL_CHK(types_)) getWithInt:i]);
}

- (NSString *)getValueWithInt:(int)i {
  if (i < 0 || i >= [((JavaUtilArrayList *) NIL_CHK(values_)) size]) {
    return nil;
  }
  return ((NSString *) [((JavaUtilArrayList *) NIL_CHK(values_)) getWithInt:i]);
}

- (NSString *)getTypeWithNSString:(NSString *)name {
  return [self getTypeWithInt:[((JavaUtilArrayList *) NIL_CHK(names_)) indexOfWithId:name]];
}

- (NSString *)getValueWithNSString:(NSString *)name {
  return [self getValueWithInt:[((JavaUtilArrayList *) NIL_CHK(names_)) indexOfWithId:name]];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&values_, nil);
  JreOperatorRetainedAssign(&types_, nil);
  JreOperatorRetainedAssign(&names_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgXmlSaxHelpersAttributeListImpl *typedCopy = (OrgXmlSaxHelpersAttributeListImpl *) copy;
  typedCopy.names = names_;
  typedCopy.types = types_;
  typedCopy.values = values_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:names_ name:@"names"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:types_ name:@"types"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:values_ name:@"values"]];
  return result;
}

@end
