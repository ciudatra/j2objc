//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/org/xml/sax/SAXParseException.java
//
//  Created by retechretech on 13-4-24.
//

#import "IOSClass.h"
#import "java/lang/Exception.h"
#import "org/xml/sax/Locator.h"
#import "org/xml/sax/SAXParseException.h"

@implementation OrgXmlSaxSAXParseException

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (NSString *)publicId {
  return publicId_;
}
- (void)setPublicId:(NSString *)publicId {
  JreOperatorRetainedAssign(&publicId_, publicId);
}
@synthesize publicId = publicId_;
- (NSString *)systemId {
  return systemId_;
}
- (void)setSystemId:(NSString *)systemId {
  JreOperatorRetainedAssign(&systemId_, systemId);
}
@synthesize systemId = systemId_;
@synthesize lineNumber = lineNumber_;
@synthesize columnNumber = columnNumber_;

- (id)initWithNSString:(NSString *)message
  withOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator {
  if ((self = [super initWithNSString:message])) {
    if (locator != nil) {
      [self init__WithNSString:[locator getPublicId] withNSString:[locator getSystemId] withInt:[locator getLineNumber] withInt:[locator getColumnNumber]];
    }
    else {
      [self init__WithNSString:nil withNSString:nil withInt:-1 withInt:-1];
    }
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
  withOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator
 withJavaLangException:(JavaLangException *)e {
  if ((self = [super initWithNSString:message withJavaLangException:e])) {
    if (locator != nil) {
      [self init__WithNSString:[locator getPublicId] withNSString:[locator getSystemId] withInt:[locator getLineNumber] withInt:[locator getColumnNumber]];
    }
    else {
      [self init__WithNSString:nil withNSString:nil withInt:-1 withInt:-1];
    }
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
          withNSString:(NSString *)publicId
          withNSString:(NSString *)systemId
               withInt:(int)lineNumber
               withInt:(int)columnNumber {
  if ((self = [super initWithNSString:message])) {
    [self init__WithNSString:publicId withNSString:systemId withInt:lineNumber withInt:columnNumber];
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
          withNSString:(NSString *)publicId
          withNSString:(NSString *)systemId
               withInt:(int)lineNumber
               withInt:(int)columnNumber
 withJavaLangException:(JavaLangException *)e {
  if ((self = [super initWithNSString:message withJavaLangException:e])) {
    [self init__WithNSString:publicId withNSString:systemId withInt:lineNumber withInt:columnNumber];
    JreMemDebugAdd(self);
  }
  return self;
}

- (void)init__WithNSString:(NSString *)publicId
              withNSString:(NSString *)systemId
                   withInt:(int)lineNumber
                   withInt:(int)columnNumber OBJC_METHOD_FAMILY_NONE {
  self.publicId = publicId;
  self.systemId = systemId;
  self.lineNumber = lineNumber;
  self.columnNumber = columnNumber;
}

- (NSString *)getPublicId {
  return self.publicId;
}

- (NSString *)getSystemId {
  return self.systemId;
}

- (int)getLineNumber {
  return self.lineNumber;
}

- (int)getColumnNumber {
  return self.columnNumber;
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&systemId_, nil);
  JreOperatorRetainedAssign(&publicId_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  OrgXmlSaxSAXParseException *typedCopy = (OrgXmlSaxSAXParseException *) copy;
  typedCopy.publicId = publicId_;
  typedCopy.systemId = systemId_;
  typedCopy.lineNumber = lineNumber_;
  typedCopy.columnNumber = columnNumber_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:publicId_ name:@"publicId"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:systemId_ name:@"systemId"]];
  return result;
}

@end
