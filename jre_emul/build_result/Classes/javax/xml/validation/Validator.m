//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/xml/validation/Validator.java
//
//  Created by retechretech on 13-4-19.
//

#import "IOSClass.h"
#import "java/lang/NullPointerException.h"
#import "javax/xml/transform/Result.h"
#import "javax/xml/transform/Source.h"
#import "javax/xml/validation/Validator.h"
#import "org/w3c/dom/ls/LSResourceResolver.h"
#import "org/xml/sax/ErrorHandler.h"
#import "org/xml/sax/SAXNotRecognizedException.h"

@implementation JavaxXmlValidationValidator

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

- (void)reset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)validateWithJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source {
  [self validateWithJavaxXmlTransformSource:source withJavaxXmlTransformResult:nil];
}

- (void)validateWithJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                withJavaxXmlTransformResult:(id<JavaxXmlTransformResult>)result {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setErrorHandlerWithOrgXmlSaxErrorHandler:(id<OrgXmlSaxErrorHandler>)errorHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgXmlSaxErrorHandler>)getErrorHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setResourceResolverWithOrgW3cDomLsLSResourceResolver:(id<OrgW3cDomLsLSResourceResolver>)resourceResolver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgW3cDomLsLSResourceResolver>)getResourceResolver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)getFeatureWithNSString:(NSString *)name {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)setFeatureWithNSString:(NSString *)name
                      withBOOL:(BOOL)value {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)setPropertyWithNSString:(NSString *)name
                         withId:(id)object {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (id)getPropertyWithNSString:(NSString *)name {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  [super dealloc];
}

@end
