//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/xml/validation/ValidatorHandler.java
//
//  Created by retechretech on 13-4-26.
//

#import "IOSCharArray.h"
#import "java/lang/NullPointerException.h"
#import "javax/xml/validation/TypeInfoProvider.h"
#import "javax/xml/validation/ValidatorHandler.h"
#import "org/w3c/dom/ls/LSResourceResolver.h"
#import "org/xml/sax/Attributes.h"
#import "org/xml/sax/ContentHandler.h"
#import "org/xml/sax/ErrorHandler.h"
#import "org/xml/sax/Locator.h"
#import "org/xml/sax/SAXNotRecognizedException.h"

@implementation JavaxXmlValidationValidatorHandler

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

- (void)setContentHandlerWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)receiver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgXmlSaxContentHandler>)getContentHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setErrorHandlerWithOrgXmlSaxErrorHandler:(id<OrgXmlSaxErrorHandler>)errorHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgXmlSaxErrorHandler>)getErrorHandler {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setResourceResolverWithOrgW3cDomLsLSResourceResolver:(id<OrgW3cDomLsLSResourceResolver>)resourceResolver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgW3cDomLsLSResourceResolver>)getResourceResolver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaxXmlValidationTypeInfoProvider *)getTypeInfoProvider {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)getFeatureWithNSString:(NSString *)name {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)setFeatureWithNSString:(NSString *)name
                      withBOOL:(BOOL)value {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)setPropertyWithNSString:(NSString *)name
                         withId:(id)object {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (id)getPropertyWithNSString:(NSString *)name {
  if (name == nil) {
    @throw [[[JavaLangNullPointerException alloc] initWithNSString:@"name == null"] autorelease];
  }
  @throw [[[OrgXmlSaxSAXNotRecognizedException alloc] initWithNSString:name] autorelease];
}

- (void)charactersWithJavaLangCharacterArray:(IOSCharArray *)param0
                                     withInt:(int)param1
                                     withInt:(int)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)endDocument {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)endElementWithNSString:(NSString *)param0
                  withNSString:(NSString *)param1
                  withNSString:(NSString *)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)endPrefixMappingWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)ignorableWhitespaceWithJavaLangCharacterArray:(IOSCharArray *)param0
                                              withInt:(int)param1
                                              withInt:(int)param2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)processingInstructionWithNSString:(NSString *)param0
                             withNSString:(NSString *)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)skippedEntityWithNSString:(NSString *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)startDocument {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)startElementWithNSString:(NSString *)param0
                    withNSString:(NSString *)param1
                    withNSString:(NSString *)param2
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)param3 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)startPrefixMappingWithNSString:(NSString *)param0
                          withNSString:(NSString *)param1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  [super dealloc];
}

@end
