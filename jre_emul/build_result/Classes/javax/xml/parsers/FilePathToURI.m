//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/xml/parsers/FilePathToURI.java
//
//  Created by retechretech on 13-4-19.
//

#import "IOSBooleanArray.h"
#import "IOSByteArray.h"
#import "IOSCharArray.h"
#import "java/io/File.h"
#import "java/io/UnsupportedEncodingException.h"
#import "java/lang/Character.h"
#import "java/lang/StringBuilder.h"
#import "javax/xml/parsers/FilePathToURI.h"

@implementation JavaxXmlParsersFilePathToURI

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gNeedEscaping_ name:@"JavaxXmlParsersFilePathToURI_gNeedEscaping_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gAfterEscaping1_ name:@"JavaxXmlParsersFilePathToURI_gAfterEscaping1_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gAfterEscaping2_ name:@"JavaxXmlParsersFilePathToURI_gAfterEscaping2_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:JavaxXmlParsersFilePathToURI_gHexChs_ name:@"JavaxXmlParsersFilePathToURI_gHexChs_"]];
  return result;
}

static IOSBooleanArray * JavaxXmlParsersFilePathToURI_gNeedEscaping_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gAfterEscaping1_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gAfterEscaping2_;
static IOSCharArray * JavaxXmlParsersFilePathToURI_gHexChs_;

+ (IOSBooleanArray *)gNeedEscaping {
  return JavaxXmlParsersFilePathToURI_gNeedEscaping_;
}

+ (void)setGNeedEscaping:(IOSBooleanArray *)gNeedEscaping {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gNeedEscaping_, gNeedEscaping);
}

+ (IOSCharArray *)gAfterEscaping1 {
  return JavaxXmlParsersFilePathToURI_gAfterEscaping1_;
}

+ (void)setGAfterEscaping1:(IOSCharArray *)gAfterEscaping1 {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping1_, gAfterEscaping1);
}

+ (IOSCharArray *)gAfterEscaping2 {
  return JavaxXmlParsersFilePathToURI_gAfterEscaping2_;
}

+ (void)setGAfterEscaping2:(IOSCharArray *)gAfterEscaping2 {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping2_, gAfterEscaping2);
}

+ (IOSCharArray *)gHexChs {
  return JavaxXmlParsersFilePathToURI_gHexChs_;
}

+ (void)setGHexChs:(IOSCharArray *)gHexChs {
  JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gHexChs_, gHexChs);
}

+ (NSString *)filepath2URIWithNSString:(NSString *)path {
  if (path == nil) return nil;
  unichar separator = JavaIoFile_separatorChar;
  path = [NIL_CHK(path) replace:separator withChar:'/'];
  int len = [NIL_CHK(path) length], ch;
  JavaLangStringBuilder *buffer = [[[JavaLangStringBuilder alloc] initWithInt:len * 3] autorelease];
  [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithNSString:@"file://"];
  if (len >= 2 && [NIL_CHK(path) charAtWithInt:1] == ':') {
    ch = [JavaLangCharacter toUpperCaseWithUnichar:[NIL_CHK(path) charAtWithInt:0]];
    if (ch >= 'A' && ch <= 'Z') {
      [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:'/'];
    }
  }
  int i = 0;
  for (; i < len; i++) {
    ch = [NIL_CHK(path) charAtWithInt:i];
    if (ch >= 128) break;
    if ([((IOSBooleanArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) booleanAtIndex:ch]) {
      [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:'%'];
      [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) charAtIndex:ch]];
      [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) charAtIndex:ch]];
    }
    else {
      [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:(unichar) ch];
    }
  }
  if (i < len) {
    IOSByteArray *bytes = nil;
    char b;
    @try {
      bytes = [[NIL_CHK(path) substring:i] getBytesWithCharset:@"UTF-8"];
    }
    @catch (JavaIoUnsupportedEncodingException *e) {
      return path;
    }
    len = (int) [((IOSByteArray *) NIL_CHK(bytes)) count];
    for (i = 0; i < len; i++) {
      b = [((IOSByteArray *) NIL_CHK(bytes)) byteAtIndex:i];
      if (b < 0) {
        ch = b + 256;
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:'%'];
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:ch >> 4]];
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:ch & (int) 0xf]];
      }
      else if ([((IOSBooleanArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) booleanAtIndex:b]) {
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:'%'];
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) charAtIndex:b]];
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) charAtIndex:b]];
      }
      else {
        [((JavaLangStringBuilder *) NIL_CHK(buffer)) appendWithUnichar:(unichar) b];
      }
    }
  }
  return [((JavaLangStringBuilder *) NIL_CHK(buffer)) description];
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

+ (void)initialize {
  if (self == [JavaxXmlParsersFilePathToURI class]) {
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gNeedEscaping_, [[[IOSBooleanArray alloc] initWithLength:128] autorelease]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping1_, [[[IOSCharArray alloc] initWithLength:128] autorelease]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gAfterEscaping2_, [[[IOSCharArray alloc] initWithLength:128] autorelease]);
    JreOperatorRetainedAssign(&JavaxXmlParsersFilePathToURI_gHexChs_, [IOSCharArray arrayWithCharacters:(unichar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16]);
    {
      for (int i = 0; i <= (int) 0x1f; i++) {
        [((IOSBooleanArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) replaceBooleanAtIndex:i withBoolean:YES];
        [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) replaceCharAtIndex:i withChar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:i >> 4]];
        [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) replaceCharAtIndex:i withChar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:i & (int) 0xf]];
      }
      [((IOSBooleanArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) replaceBooleanAtIndex:(int) 0x7f withBoolean:YES];
      [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) replaceCharAtIndex:(int) 0x7f withChar:'7'];
      [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) replaceCharAtIndex:(int) 0x7f withChar:'F'];
      IOSCharArray *escChs = [IOSCharArray arrayWithCharacters:(unichar[]){ ' ', '<', '>', '#', '%', '"', '{', '}', '|', '\\', '^', '~', '[', ']', '`' } count:15];
      int len = (int) [((IOSCharArray *) NIL_CHK(escChs)) count];
      unichar ch;
      for (int i = 0; i < len; i++) {
        ch = [((IOSCharArray *) NIL_CHK(escChs)) charAtIndex:i];
        [((IOSBooleanArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gNeedEscaping_)) replaceBooleanAtIndex:ch withBoolean:YES];
        [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping1_)) replaceCharAtIndex:ch withChar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:ch >> 4]];
        [((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gAfterEscaping2_)) replaceCharAtIndex:ch withChar:[((IOSCharArray *) NIL_CHK(JavaxXmlParsersFilePathToURI_gHexChs_)) charAtIndex:ch & (int) 0xf]];
      }
    }
  }
}

- (void)dealloc {
  JreMemDebugRemove(self);
  [super dealloc];
}

@end
