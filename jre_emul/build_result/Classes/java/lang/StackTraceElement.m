//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/tools/lib/j2objc/jre_emul/Classes/java/lang/StackTraceElement.java
//
//  Created by retechretech on 13-3-15.
//

#import "java/lang/StackTraceElement.h"

@implementation JavaLangStackTraceElement

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (NSString *)className_ {
  return [[className__ retain] autorelease];
}
- (void)setClassName_:(NSString *)className_ {
  JreOperatorRetainedAssign(&className__, className_);
}
@synthesize className_ = className__;
- (NSString *)methodName {
  return [[methodName_ retain] autorelease];
}
- (void)setMethodName:(NSString *)methodName {
  JreOperatorRetainedAssign(&methodName_, methodName);
}
@synthesize methodName = methodName_;
- (NSString *)fileName {
  return [[fileName_ retain] autorelease];
}
- (void)setFileName:(NSString *)fileName {
  JreOperatorRetainedAssign(&fileName_, fileName);
}
@synthesize fileName = fileName_;
@synthesize lineNumber = lineNumber_;

- (NSString *)getClassName {
  return className__;
}

- (NSString *)getMethodName {
  return methodName_;
}

- (NSString *)getFileName {
  return fileName_;
}

- (int)getLineNumber {
  return lineNumber_;
}

- (id)initWithNSString:(NSString *)className_
          withNSString:(NSString *)methodName
          withNSString:(NSString *)fileName
               withInt:(int)lineNumber {
  if ((self = [super init])) {
    self.className_ = className_;
    self.methodName = methodName;
    self.fileName = fileName;
    self.lineNumber = lineNumber;
    JreMemDebugAdd(self);
  }
  return self;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"%@%@(%@:%d)", (className__ != nil ? [NSString stringWithFormat:@"%@.", className__] : @""), (methodName_ != nil ? methodName_ : @""), (fileName_ != nil ? fileName_ : @""), lineNumber_];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&fileName_, nil);
  JreOperatorRetainedAssign(&methodName_, nil);
  JreOperatorRetainedAssign(&className__, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  JavaLangStackTraceElement *typedCopy = (JavaLangStackTraceElement *) copy;
  typedCopy.className_ = className__;
  typedCopy.methodName = methodName_;
  typedCopy.fileName = fileName_;
  typedCopy.lineNumber = lineNumber_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:className__ name:@"className_"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:methodName_ name:@"methodName"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:fileName_ name:@"fileName"]];
  return result;
}

@end
