//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/luni/src/main/java/java/lang/reflect/Modifier.java
//
//  Created by retechretech on 13-4-26.
//

#import "java/lang/StringBuilder.h"
#import "java/lang/reflect/Modifier.h"

@implementation JavaLangReflectModifier

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

+ (int)PUBLIC {
  return JavaLangReflectModifier_PUBLIC;
}

+ (int)PRIVATE {
  return JavaLangReflectModifier_PRIVATE;
}

+ (int)PROTECTED {
  return JavaLangReflectModifier_PROTECTED;
}

+ (int)STATIC {
  return JavaLangReflectModifier_STATIC;
}

+ (int)FINAL {
  return JavaLangReflectModifier_FINAL;
}

+ (int)SYNCHRONIZED {
  return JavaLangReflectModifier_SYNCHRONIZED;
}

+ (int)VOLATILE {
  return JavaLangReflectModifier_VOLATILE;
}

+ (int)TRANSIENT {
  return JavaLangReflectModifier_TRANSIENT;
}

+ (int)NATIVE {
  return JavaLangReflectModifier_NATIVE;
}

+ (int)INTERFACE {
  return JavaLangReflectModifier_INTERFACE;
}

+ (int)ABSTRACT {
  return JavaLangReflectModifier_ABSTRACT;
}

+ (int)STRICT {
  return JavaLangReflectModifier_STRICT;
}

+ (int)BRIDGE {
  return JavaLangReflectModifier_BRIDGE;
}

+ (int)VARARGS {
  return JavaLangReflectModifier_VARARGS;
}

+ (int)SYNTHETIC {
  return JavaLangReflectModifier_SYNTHETIC;
}

+ (int)ANNOTATION {
  return JavaLangReflectModifier_ANNOTATION;
}

+ (int)ENUM {
  return JavaLangReflectModifier_ENUM;
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

+ (BOOL)isAbstractWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_ABSTRACT) != 0);
}

+ (BOOL)isFinalWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_FINAL) != 0);
}

+ (BOOL)isInterfaceWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_INTERFACE) != 0);
}

+ (BOOL)isNativeWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_NATIVE) != 0);
}

+ (BOOL)isPrivateWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_PRIVATE) != 0);
}

+ (BOOL)isProtectedWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_PROTECTED) != 0);
}

+ (BOOL)isPublicWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_PUBLIC) != 0);
}

+ (BOOL)isStaticWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_STATIC) != 0);
}

+ (BOOL)isStrictWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_STRICT) != 0);
}

+ (BOOL)isSynchronizedWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_SYNCHRONIZED) != 0);
}

+ (BOOL)isTransientWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_TRANSIENT) != 0);
}

+ (BOOL)isVolatileWithInt:(int)modifiers {
  return ((modifiers & JavaLangReflectModifier_VOLATILE) != 0);
}

+ (NSString *)toStringWithInt:(int)modifiers {
  JavaLangStringBuilder *buf = [[[JavaLangStringBuilder alloc] init] autorelease];
  if ([JavaLangReflectModifier isPublicWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"public "];
  }
  if ([JavaLangReflectModifier isProtectedWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"protected "];
  }
  if ([JavaLangReflectModifier isPrivateWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"private "];
  }
  if ([JavaLangReflectModifier isAbstractWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"abstract "];
  }
  if ([JavaLangReflectModifier isStaticWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"static "];
  }
  if ([JavaLangReflectModifier isFinalWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"final "];
  }
  if ([JavaLangReflectModifier isTransientWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"transient "];
  }
  if ([JavaLangReflectModifier isVolatileWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"volatile "];
  }
  if ([JavaLangReflectModifier isSynchronizedWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"synchronized "];
  }
  if ([JavaLangReflectModifier isNativeWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"native "];
  }
  if ([JavaLangReflectModifier isStrictWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"strictfp "];
  }
  if ([JavaLangReflectModifier isInterfaceWithInt:modifiers]) {
    [((JavaLangStringBuilder *) NIL_CHK(buf)) appendWithNSString:@"interface "];
  }
  if ([((JavaLangStringBuilder *) NIL_CHK(buf)) sequenceLength] == 0) {
    return @"";
  }
  [((JavaLangStringBuilder *) NIL_CHK(buf)) setLengthWithInt:[((JavaLangStringBuilder *) NIL_CHK(buf)) sequenceLength] - 1];
  return [((JavaLangStringBuilder *) NIL_CHK(buf)) description];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  [super dealloc];
}

@end
