//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/luni/src/main/java/java/io/FilterInputStream.java
//
//  Created by retechretech on 13-4-14.
//

#import "IOSByteArray.h"
#import "java/io/FilterInputStream.h"
#import "java/io/InputStream.h"

@implementation JavaIoFilterInputStream

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (JavaIoInputStream *)in {
  return in_;
}
- (void)setIn:(JavaIoInputStream *)in {
  JreOperatorRetainedAssign(&in_, in);
}
@synthesize in = in_;

- (id)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  if ((self = [super init])) {
    self.in = inArg;
    JreMemDebugAdd(self);
  }
  return self;
}

- (int)available {
  return [((JavaIoInputStream *) NIL_CHK(in_)) available];
}

- (void)close {
  [((JavaIoInputStream *) NIL_CHK(in_)) close];
}

- (void)markWithInt:(int)readlimit {
  @synchronized(self) {
    {
      [((JavaIoInputStream *) NIL_CHK(in_)) markWithInt:readlimit];
    }
  }
}

- (BOOL)markSupported {
  return [((JavaIoInputStream *) NIL_CHK(in_)) markSupported];
}

- (int)read {
  return [((JavaIoInputStream *) NIL_CHK(in_)) read];
}

- (int)readWithJavaLangByteArray:(IOSByteArray *)buffer {
  return [self readWithJavaLangByteArray:buffer withInt:0 withInt:(int) [((IOSByteArray *) NIL_CHK(buffer)) count]];
}

- (int)readWithJavaLangByteArray:(IOSByteArray *)buffer
                         withInt:(int)offset
                         withInt:(int)count {
  return [((JavaIoInputStream *) NIL_CHK(in_)) readWithJavaLangByteArray:buffer withInt:offset withInt:count];
}

- (void)reset {
  @synchronized(self) {
    {
      [((JavaIoInputStream *) NIL_CHK(in_)) reset];
    }
  }
}

- (long long int)skipWithLongInt:(long long int)count {
  return [((JavaIoInputStream *) NIL_CHK(in_)) skipWithLongInt:count];
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&in_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  JavaIoFilterInputStream *typedCopy = (JavaIoFilterInputStream *) copy;
  typedCopy.in = in_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:in_ name:@"in"]];
  return result;
}

@end
