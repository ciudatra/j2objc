//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Classes/java/util/logging/LogRecord.java
//
//  Created by retechretech on 13-4-14.
//

#import "java/lang/Throwable.h"
#import "java/util/Date.h"
#import "java/util/logging/Level.h"
#import "java/util/logging/LogRecord.h"

@implementation JavaUtilLoggingLogRecord

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (JavaUtilLoggingLevel *)level {
  return level_;
}
- (void)setLevel:(JavaUtilLoggingLevel *)level {
  JreOperatorRetainedAssign(&level_, level);
}
@synthesize level = level_;
- (NSString *)loggerName {
  return loggerName_;
}
- (void)setLoggerName:(NSString *)loggerName {
  JreOperatorRetainedAssign(&loggerName_, loggerName);
}
@synthesize loggerName = loggerName_;
- (NSString *)msg {
  return msg_;
}
- (void)setMsg:(NSString *)msg {
  JreOperatorRetainedAssign(&msg_, msg);
}
@synthesize msg = msg_;
- (JavaLangThrowable *)thrown {
  return thrown_;
}
- (void)setThrown:(JavaLangThrowable *)thrown {
  JreOperatorRetainedAssign(&thrown_, thrown);
}
@synthesize thrown = thrown_;
@synthesize millis = millis_;

- (id)initWithJavaUtilLoggingLevel:(JavaUtilLoggingLevel *)level
                      withNSString:(NSString *)msg {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&loggerName_, @"");
    JreOperatorRetainedAssign(&thrown_, nil);
    self.level = level;
    self.msg = msg;
    millis_ = [((JavaUtilDate *) [[[JavaUtilDate alloc] init] autorelease]) getTime];
    JreMemDebugAdd(self);
  }
  return self;
}

- (id)init {
  if ((self = [super init])) {
    JreOperatorRetainedAssign(&loggerName_, @"");
    JreOperatorRetainedAssign(&thrown_, nil);
    JreMemDebugAdd(self);
  }
  return self;
}

- (JavaUtilLoggingLevel *)getLevel {
  return level_;
}

- (NSString *)getLoggerName {
  return loggerName_;
}

- (NSString *)getMessage {
  return msg_;
}

- (long long int)getMillis {
  return millis_;
}

- (JavaLangThrowable *)getThrown {
  return thrown_;
}

- (void)setLevelWithJavaUtilLoggingLevel:(JavaUtilLoggingLevel *)newLevel {
  JreOperatorRetainedAssign(&level_, newLevel);
}

- (void)setLoggerNameWithNSString:(NSString *)newName {
  JreOperatorRetainedAssign(&loggerName_, newName);
}

- (void)setMessageWithNSString:(NSString *)newMessage {
  JreOperatorRetainedAssign(&msg_, newMessage);
}

- (void)setMillisWithLongInt:(long long int)newMillis {
  millis_ = newMillis;
}

- (void)setThrownWithJavaLangThrowable:(JavaLangThrowable *)newThrown {
  JreOperatorRetainedAssign(&thrown_, newThrown);
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&thrown_, nil);
  JreOperatorRetainedAssign(&msg_, nil);
  JreOperatorRetainedAssign(&loggerName_, nil);
  JreOperatorRetainedAssign(&level_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  JavaUtilLoggingLogRecord *typedCopy = (JavaUtilLoggingLogRecord *) copy;
  typedCopy.level = level_;
  typedCopy.loggerName = loggerName_;
  typedCopy.msg = msg_;
  typedCopy.thrown = thrown_;
  typedCopy.millis = millis_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:level_ name:@"level"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:loggerName_ name:@"loggerName"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:msg_ name:@"msg"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:thrown_ name:@"thrown"]];
  return result;
}

@end
