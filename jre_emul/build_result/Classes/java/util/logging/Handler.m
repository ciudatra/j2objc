//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Classes/java/util/logging/Handler.java
//
//  Created by retechretech on 13-4-24.
//

#import "java/util/logging/Formatter.h"
#import "java/util/logging/Handler.h"
#import "java/util/logging/Level.h"
#import "java/util/logging/LogRecord.h"

@implementation JavaUtilLoggingHandler

+ (NSArray *)memDebugStaticReferences {
  NSMutableArray *result = [NSMutableArray array];
  return result;
}

- (JavaUtilLoggingFormatter *)formatter {
  return formatter_;
}
- (void)setFormatter:(JavaUtilLoggingFormatter *)formatter {
  JreOperatorRetainedAssign(&formatter_, formatter);
}
@synthesize formatter = formatter_;
- (JavaUtilLoggingLevel *)level {
  return level_;
}
- (void)setLevel:(JavaUtilLoggingLevel *)level {
  JreOperatorRetainedAssign(&level_, level);
}
@synthesize level = level_;

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)flush {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (JavaUtilLoggingFormatter *)getFormatter {
  return formatter_;
}

- (JavaUtilLoggingLevel *)getLevel {
  if (level_ != nil) {
    return level_;
  }
  return [JavaUtilLoggingLevel ALL];
}

- (BOOL)isLoggableWithJavaUtilLoggingLogRecord:(JavaUtilLoggingLogRecord *)record {
  return [[self getLevel] intValue] <= [[((JavaUtilLoggingLogRecord *) NIL_CHK(record)) getLevel] intValue];
}

- (void)publishWithJavaUtilLoggingLogRecord:(JavaUtilLoggingLogRecord *)record {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setFormatterWithJavaUtilLoggingFormatter:(JavaUtilLoggingFormatter *)newFormatter {
  JreOperatorRetainedAssign(&formatter_, newFormatter);
}

- (void)setLevelWithJavaUtilLoggingLevel:(JavaUtilLoggingLevel *)newLevel {
  JreOperatorRetainedAssign(&level_, newLevel);
}

- (id)init {
  return JreMemDebugAdd([super init]);
}

- (void)dealloc {
  JreMemDebugRemove(self);
  JreOperatorRetainedAssign(&level_, nil);
  JreOperatorRetainedAssign(&formatter_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  JavaUtilLoggingHandler *typedCopy = (JavaUtilLoggingHandler *) copy;
  typedCopy.formatter = formatter_;
  typedCopy.level = level_;
}

- (NSArray *)memDebugStrongReferences {
  NSMutableArray *result =
      [[[super memDebugStrongReferences] mutableCopy] autorelease];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:formatter_ name:@"formatter"]];
  [result addObject:[JreMemDebugStrongReference strongReferenceWithObject:level_ name:@"level"]];
  return result;
}

@end
