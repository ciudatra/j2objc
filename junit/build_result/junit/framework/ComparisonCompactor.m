//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/retechretech/dev/tools/lib/j2objc/junit/build_result/java/junit/framework/ComparisonCompactor.java
//
//  Created by retechretech on 13-4-26.
//

#import "java/lang/Math.h"
#import "junit/framework/Assert.h"
#import "junit/framework/ComparisonCompactor.h"

@implementation JunitFrameworkComparisonCompactor

static NSString * JunitFrameworkComparisonCompactor_ELLIPSIS_ = @"...";
static NSString * JunitFrameworkComparisonCompactor_DELTA_END_ = @"]";
static NSString * JunitFrameworkComparisonCompactor_DELTA_START_ = @"[";

@synthesize fContextLength = fContextLength_;
- (NSString *)fExpected {
  return fExpected_;
}
- (void)setFExpected:(NSString *)fExpected {
  JreOperatorRetainedAssign(&fExpected_, fExpected);
}
@synthesize fExpected = fExpected_;
- (NSString *)fActual {
  return fActual_;
}
- (void)setFActual:(NSString *)fActual {
  JreOperatorRetainedAssign(&fActual_, fActual);
}
@synthesize fActual = fActual_;
@synthesize fPrefix = fPrefix_;
@synthesize fSuffix = fSuffix_;

+ (NSString *)ELLIPSIS {
  return JunitFrameworkComparisonCompactor_ELLIPSIS_;
}

+ (NSString *)DELTA_END {
  return JunitFrameworkComparisonCompactor_DELTA_END_;
}

+ (NSString *)DELTA_START {
  return JunitFrameworkComparisonCompactor_DELTA_START_;
}

- (id)initWithInt:(int)contextLength
     withNSString:(NSString *)expected
     withNSString:(NSString *)actual {
  if ((self = [super init])) {
    fContextLength_ = contextLength;
    JreOperatorRetainedAssign(&fExpected_, expected);
    JreOperatorRetainedAssign(&fActual_, actual);
  }
  return self;
}

- (NSString *)compactWithNSString:(NSString *)message {
  if (fExpected_ == nil || fActual_ == nil || [self areStringsEqual]) return [JunitFrameworkAssert formatWithNSString:message withId:fExpected_ withId:fActual_];
  [self findCommonPrefix];
  [self findCommonSuffix];
  NSString *expected = [self compactStringWithNSString:fExpected_];
  NSString *actual = [self compactStringWithNSString:fActual_];
  return [JunitFrameworkAssert formatWithNSString:message withId:expected withId:actual];
}

- (NSString *)compactStringWithNSString:(NSString *)source {
  NSString *result = [NSString stringWithFormat:@"[%@]", [NIL_CHK(source) substring:fPrefix_ endIndex:[NIL_CHK(source) length] - fSuffix_ + 1]];
  if (fPrefix_ > 0) result = [NSString stringWithFormat:@"%@%@", [self computeCommonPrefix], result];
  if (fSuffix_ > 0) result = [NSString stringWithFormat:@"%@%@", result, [self computeCommonSuffix]];
  return result;
}

- (void)findCommonPrefix {
  fPrefix_ = 0;
  int end = [JavaLangMath minWithInt:[NIL_CHK(fExpected_) length] withInt:[NIL_CHK(fActual_) length]];
  for (; fPrefix_ < end; fPrefix_++) {
    if ([NIL_CHK(fExpected_) charAtWithInt:fPrefix_] != [NIL_CHK(fActual_) charAtWithInt:fPrefix_]) break;
  }
}

- (void)findCommonSuffix {
  int expectedSuffix = [NIL_CHK(fExpected_) length] - 1;
  int actualSuffix = [NIL_CHK(fActual_) length] - 1;
  for (; actualSuffix >= fPrefix_ && expectedSuffix >= fPrefix_; actualSuffix--, expectedSuffix--) {
    if ([NIL_CHK(fExpected_) charAtWithInt:expectedSuffix] != [NIL_CHK(fActual_) charAtWithInt:actualSuffix]) break;
  }
  fSuffix_ = [NIL_CHK(fExpected_) length] - expectedSuffix;
}

- (NSString *)computeCommonPrefix {
  return [NSString stringWithFormat:@"%@%@", (fPrefix_ > fContextLength_ ? JunitFrameworkComparisonCompactor_ELLIPSIS_ : @""), [NIL_CHK(fExpected_) substring:[JavaLangMath maxWithInt:0 withInt:fPrefix_ - fContextLength_] endIndex:fPrefix_]];
}

- (NSString *)computeCommonSuffix {
  int end = [JavaLangMath minWithInt:[NIL_CHK(fExpected_) length] - fSuffix_ + 1 + fContextLength_ withInt:[NIL_CHK(fExpected_) length]];
  return [NSString stringWithFormat:@"%@%@", [NIL_CHK(fExpected_) substring:[NIL_CHK(fExpected_) length] - fSuffix_ + 1 endIndex:end], ([NIL_CHK(fExpected_) length] - fSuffix_ + 1 < [NIL_CHK(fExpected_) length] - fContextLength_ ? JunitFrameworkComparisonCompactor_ELLIPSIS_ : @"")];
}

- (BOOL)areStringsEqual {
  return [NIL_CHK(fExpected_) isEqual:fActual_];
}

- (void)dealloc {
  JreOperatorRetainedAssign(&fActual_, nil);
  JreOperatorRetainedAssign(&fExpected_, nil);
  [super dealloc];
}

- (void)copyAllPropertiesTo:(id)copy {
  [super copyAllPropertiesTo:copy];
  JunitFrameworkComparisonCompactor *typedCopy = (JunitFrameworkComparisonCompactor *) copy;
  typedCopy.fContextLength = fContextLength_;
  typedCopy.fExpected = fExpected_;
  typedCopy.fActual = fActual_;
  typedCopy.fPrefix = fPrefix_;
  typedCopy.fSuffix = fSuffix_;
}

@end
